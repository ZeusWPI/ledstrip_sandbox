doctype html
html(lang="en")
  head
    title="pageTitle"
    :css
      body {
        font-family: sans-serif;
      }
      div {
        margin: 0px;
        padding: 0px;
      }
      div.led {
        position: absolute;
        width: 11px;
        height: 11px;
        border: 1px solid;
      }
      div.led.assigned {
        border-color: gray;
        border-style: dotted;
      }
      div.led.selected {
        border-color: red;
      }
      div.label {
        position: absolute;
        width: max-content;
        transform: translateX(-50%);
      }
    :javascript
      let g_segments = [];
      let g_selectedSegment = null;
      let g_selectedLed = null;

      const setSelectedSegmentNew = (led1, led2) => {
        let led1_num = Number.parseInt(led1.id.substring(4));
        let led2_num = Number.parseInt(led2.id.substring(4));
        g_segments.forEach((seg) => {
          g_selectedSegment = {
            "begin": led1_num,
            "end": led2_num,
          }
        });
        document.getElementById("selection").innerText = `Selection: ${JSON.stringify(g_selectedSegment)}`;
      };

      const setSelectedSegmentExisting = (led) => {
        let led_num = Number.parseInt(led.id.substring(4));
        g_segments.forEach((seg) => {
          if (seg.begin <= led_num && led_num < seg.end) {
            g_selectedSegment = seg;
          }
        });
        document.getElementById("selection").innerText = `Selection: ${JSON.stringify(g_selectedSegment)}`;
      };

      const selectLedUnassigned = (led) => {
        if (g_selectedLed === null) {
          g_selectedLed = led;
          g_selectedLed.classList.add("selected");
        } else {
          setSelectedSegmentNew(g_selectedLed, led);
          g_selectedLed.classList.remove("selected");
          g_selectedLed = null;
        }
      }

      const onClickLed = (event) => {
        let led = event.target;
        if (!led)
          return;
        if (led.classList.contains("assigned"))
          setSelectedSegmentExisting(led);
        else
          selectLedUnassigned(led);
      }

      const updateSegments = () => {
        fetch("/api/segments")
          .then((res) => res.json())
          .then((segs) => {
            g_segments = segs;
            for (let i = 0; i < 690; i++) {
              let el = document.getElementById(`led_${i}`);
              el.classList.remove("assigned");
              el.setAttribute("title", `Led ${i}`);
              el.onclick = onClickLed;
            }
            segs.forEach((seg) => {
              for (let i = seg.begin; i < seg.end; i++) {
                let el = document.getElementById(`led_${i}`);
                el.classList.add("assigned");
                el.setAttribute("title", `Led ${i}, assigned to "${seg.scriptFileName}"`);
              }
            });
          });
      };

      window.onload = () => {
        updateSegments();
        setInterval(updateSegments, 2000);
      };
  body
    h1 Test
    div#selection
    - foreach (i, led; ledPositions.leds)
      div.led.assigned(id="led_#{i}", style="left: #{32 + led.x * 14}px; top: #{88 + led.y * 14}px;")
    - foreach (label; ledPositions.labels)
      div.label(style="left: #{32 + label.x * 14 + 6}px; top: #{64 + label.y * 14}px;") #{label.text}
